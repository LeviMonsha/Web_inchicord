{"ast":null,"code":"var _jsxFileName = \"c:\\\\main\\\\lang\\\\web\\\\react\\\\inchicord\\\\client\\\\src\\\\pages\\\\auth\\\\Reset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const auth = getAuth();\n  const handleReset = () => {\n    sendPasswordResetEmail(auth, email).then(() => {\n      console.log(\"success\");\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(\"An error has occured: \", errorCode, errorMessage);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \"Email:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Reset, \"Pe1zWWKcsJK82m3WyFiCTurRPxo=\");\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useState","getAuth","sendPasswordResetEmail","jsxDEV","_jsxDEV","Reset","_s","email","setEmail","auth","handleReset","then","console","log","catch","error","errorCode","code","errorMessage","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["c:/main/lang/web/react/inchicord/client/src/pages/auth/Reset.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\r\n\r\nconst Reset = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const auth = getAuth();\r\n  const handleReset = () => {\r\n    sendPasswordResetEmail(auth, email)\r\n      .then(() => {\r\n        console.log(\"success\");\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(\"An error has occured: \", errorCode, errorMessage);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Reset password</h1>\r\n      Email:\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <br />\r\n      <button onClick={handleReset}>Reset password</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,sBAAsB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,IAAI,GAAGR,OAAO,CAAC,CAAC;EACtB,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,sBAAsB,CAACO,IAAI,EAAEF,KAAK,CAAC,CAChCI,IAAI,CAAC,MAAM;MACVC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClCP,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEG,SAAS,EAAEE,YAAY,CAAC;IAChE,CAAC,CAAC;EACN,CAAC;EACD,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,UAEvB,eAAApB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA;MAAQ0B,OAAO,EAAEpB,WAAY;MAAAU,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAClB,EAAA,CA7BID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}