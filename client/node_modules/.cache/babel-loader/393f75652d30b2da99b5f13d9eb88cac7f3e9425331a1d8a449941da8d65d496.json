{"ast":null,"code":"var _jsxFileName = \"c:\\\\main\\\\lang\\\\web\\\\react\\\\inchicord\\\\client\\\\src\\\\pages\\\\auth\\\\Reset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const auth = getAuth();\n  const handleReset = () => {\n    // Clear previous messages\n    setMessage(\"\");\n    setError(\"\");\n\n    // Validate email format (simple regex)\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    sendPasswordResetEmail(auth, email).then(() => {\n      setMessage(\"Password reset email sent! Please check your inbox.\");\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(\"An error has occurred: \", errorCode, errorMessage);\n      setError(\"An error occurred: \" + errorMessage);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"border border-gray-300 rounded p-2 w-full mb-4\",\n        placeholder: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        className: \"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-green-600\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Reset, \"93h/aJO5x+HN7i+YpQwepLaFL6Q=\");\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useState","getAuth","sendPasswordResetEmail","jsxDEV","_jsxDEV","Reset","_s","email","setEmail","message","setMessage","error","setError","auth","handleReset","test","then","catch","errorCode","code","errorMessage","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["c:/main/lang/web/react/inchicord/client/src/pages/auth/Reset.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\r\n\r\nconst Reset = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const auth = getAuth();\r\n\r\n  const handleReset = () => {\r\n    // Clear previous messages\r\n    setMessage(\"\");\r\n    setError(\"\");\r\n\r\n    // Validate email format (simple regex)\r\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    sendPasswordResetEmail(auth, email)\r\n      .then(() => {\r\n        setMessage(\"Password reset email sent! Please check your inbox.\");\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(\"An error has occurred: \", errorCode, errorMessage);\r\n        setError(\"An error occurred: \" + errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md w-96\">\r\n        <h1 className=\"text-xl font-bold mb-4\">Reset Password</h1>\r\n        <label className=\"block mb-2\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"border border-gray-300 rounded p-2 w-full mb-4\"\r\n          placeholder=\"Enter your email\"\r\n        />\r\n        <button\r\n          onClick={handleReset}\r\n          className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"\r\n        >\r\n          Reset Password\r\n        </button>\r\n        {message && <p className=\"mt-4 text-green-600\">{message}</p>}\r\n        {error && <p className=\"mt-4 text-red-600\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}